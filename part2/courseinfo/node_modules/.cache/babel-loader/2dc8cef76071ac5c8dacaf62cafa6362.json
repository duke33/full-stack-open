{"ast":null,"code":"var _jsxFileName = \"/home/atom/Documents/FullStackOpen/part2/courseinfo/src/App.js\";\nimport React from \"react\"; //Header takes care of rendering the name of the course, Content renders the parts and their number of exercises and Total renders the total number of exercises\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" \", props.course, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Header;\n\nconst Part = props => {\n  const banana = props.parts.map(value => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" \", value.name + \" \" + value.exercises, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  return banana;\n};\n\n_c2 = Part;\n\nconst Total = props => {\n  //props.parts[0].exercises;\n  return \" \" + props.parts.reduce((accumulator, currentValue) => accumulator + currentValue.exercises, 0);\n};\n\n_c3 = Total;\n\nconst App = () => {\n  const course = {\n    name: \"Half Stack application development\",\n    parts: [{\n      name: \"Fundamentals of React\",\n      exercises: 10\n    }, {\n      name: \"Using props to pass data\",\n      exercises: 7\n    }, {\n      name: \"State of a component\",\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total\", /*#__PURE__*/_jsxDEV(Total, {\n        parts: course.parts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/atom/Documents/FullStackOpen/part2/courseinfo/src/App.js"],"names":["React","Header","props","course","Part","banana","parts","map","value","name","exercises","Total","reduce","accumulator","currentValue","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBAAO;AAAA,oBAAMA,KAAK,CAACC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMF,M;;AAIN,MAAMG,IAAI,GAAIF,KAAD,IAAW;AACtB,QAAMG,MAAM,GAAGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAiBC,KAAD,iBAC7B;AAAA,oBAAKA,KAAK,CAACC,IAAN,GAAa,GAAb,GAAmBD,KAAK,CAACE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAGA,SAAOL,MAAP;AACD,CALD;;MAAMD,I;;AAMN,MAAMO,KAAK,GAAIT,KAAD,IAAW;AACvB;AACA,SACE,MACAA,KAAK,CAACI,KAAN,CAAYM,MAAZ,CACE,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,GAAGC,YAAY,CAACJ,SAD5D,EAEE,CAFF,CAFF;AAOD,CATD;;MAAMC,K;;AAWN,MAAMI,GAAG,GAAG,MAAM;AAChB,QAAMZ,MAAM,GAAG;AACbM,IAAAA,IAAI,EAAE,oCADO;AAGbH,IAAAA,KAAK,EAAE,CACL;AAAEG,MAAAA,IAAI,EAAE,uBAAR;AAAiCC,MAAAA,SAAS,EAAE;AAA5C,KADK,EAEL;AAAED,MAAAA,IAAI,EAAE,0BAAR;AAAoCC,MAAAA,SAAS,EAAE;AAA/C,KAFK,EAGL;AAAED,MAAAA,IAAI,EAAE,sBAAR;AAAgCC,MAAAA,SAAS,EAAE;AAA3C,KAHK;AAHM,GAAf;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEP,MAAM,CAACM;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA,uCAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEH,MAAM,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBD;;MAAMS,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n//Header takes care of rendering the name of the course, Content renders the parts and their number of exercises and Total renders the total number of exercises\n\nconst Header = (props) => {\n  return <h1> {props.course} </h1>;\n};\n\nconst Part = (props) => {\n  const banana = props.parts.map((value) => (\n    <p> {value.name + \" \" + value.exercises} </p>\n  ));\n  return banana;\n};\nconst Total = (props) => {\n  //props.parts[0].exercises;\n  return (\n    \" \" +\n    props.parts.reduce(\n      (accumulator, currentValue) => accumulator + currentValue.exercises,\n      0\n    )\n  );\n};\n\nconst App = () => {\n  const course = {\n    name: \"Half Stack application development\",\n\n    parts: [\n      { name: \"Fundamentals of React\", exercises: 10 },\n      { name: \"Using props to pass data\", exercises: 7 },\n      { name: \"State of a component\", exercises: 14 },\n    ],\n  };\n  return (\n    <div>\n      <Header course={course.name} />\n      <Part parts={course.parts} />\n\n      <p>\n        Total\n        <Total parts={course.parts} />\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}