{"ast":null,"code":"var _jsxFileName = \"/home/atom/Documents/FullStackOpen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: [\" \", label, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  allVotes\n}) => {\n  if (allVotes === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" No feedback Given \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Good \", good, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Neutral \", neutral, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Good \", bad, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" All \", allVotes, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Average \", (bad * -1 + good) / allVotes, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Positive \", good / allVotes * 100, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const allVotes = bad + good + neutral;\n\n  const setGoodTo = vote => {\n    const handler = () => {\n      setGood(vote + 1);\n    };\n\n    return handler;\n  };\n\n  const setNeutralTo = vote => {\n    const handler = () => {\n      setNeutral(vote + 1);\n    };\n\n    return handler;\n  };\n\n  const setBadTo = vote => {\n    const handler = () => {\n      setBad(vote + 1);\n    };\n\n    return handler;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Give Feedback \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"good\",\n      handleClick: setGoodTo(good)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"neutral\",\n      handleClick: setNeutralTo(neutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"bad\",\n      handleClick: setBadTo(bad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      allVotes: allVotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/atom/Documents/FullStackOpen/part1/unicafe/src/App.js"],"names":["React","useState","Button","handleClick","label","Statistics","good","neutral","bad","allVotes","App","setGood","setNeutral","setBad","setGoodTo","vote","handler","setNeutralTo","setBadTo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Button = ({ handleClick, label }) => {\n  return <button onClick={handleClick}> {label} </button>;\n};\n\nconst Statistics = ({ good, neutral, bad, allVotes }) => {\n  if (allVotes === 0) {\n    return <h1> No feedback Given </h1>;\n  }\n\n  return (\n    <div>\n      <h1> Statistics </h1>\n      <p> Good {good} </p>\n      <p> Neutral {neutral} </p>\n      <p> Good {bad} </p>\n      <p> All {allVotes} </p>\n      <p> Average {(bad * -1 + good) / allVotes} </p>\n      <p> Positive {(good / allVotes) * 100} </p>\n    </div>\n  );\n};\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const allVotes = bad + good + neutral;\n\n  const setGoodTo = (vote) => {\n    const handler = () => {\n      setGood(vote + 1);\n    };\n    return handler;\n  };\n\n  const setNeutralTo = (vote) => {\n    const handler = () => {\n      setNeutral(vote + 1);\n    };\n    return handler;\n  };\n\n  const setBadTo = (vote) => {\n    const handler = () => {\n      setBad(vote + 1);\n    };\n    return handler;\n  };\n\n  return (\n    <div>\n      <h1> Give Feedback </h1>\n      <Button label=\"good\" handleClick={setGoodTo(good)} />\n      <Button label=\"neutral\" handleClick={setNeutralTo(neutral)} />\n      <Button label=\"bad\" handleClick={setBadTo(bad)} />\n      <Statistics good={good} neutral={neutral} bad={bad} allVotes={allVotes} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}